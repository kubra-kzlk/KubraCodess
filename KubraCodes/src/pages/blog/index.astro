---
import BaseHead from "../../components/BaseHead.astro";
import Header from "../../components/Header.astro";
import Footer from "../../components/Footer.astro";
import { SITE_TITLE, SITE_DESCRIPTION } from "../../consts";
import FormattedDate from "../../components/FormattedDate.astro";
import { fetchBlogPosts } from "../../lib/contentful";

const posts = (await fetchBlogPosts())
	.filter(
		(post) =>
			typeof post.publishedDate === "string" &&
			post.publishedDate.trim() !== "",
	)
	.map((post) => ({
		...post,
		publishedDate: new Date(post.publishedDate as string).toISOString(),
		featuredImage: post.featuredImage || "", // Extract image URL from Contentful asset
		title: typeof post.title === "string" ? post.title : "Untitled Post",
		subtitle:
			typeof post.subtitle === "string"
				? post.subtitle
				: "No description available",
		tags: Array.isArray(post.tags) ? post.tags : [], // Ensure tags are an array
	}))
	.sort(
		(a, b) =>
			new Date(b.publishedDate).getTime() -
			new Date(a.publishedDate).getTime(),
	); // Sort by newest first
---

<!doctype html>
<html lang="en">
	<head>
		<BaseHead title={SITE_TITLE} description={SITE_DESCRIPTION} />
	</head>
	<body>
		<Header />
		<i data-lucide="message-circle" style="stroke: black; "></i>

		<main>
			<div class="search-bar">
				<input
					type="text"
					id="searchInput"
					placeholder="Search by tag..."
				/>
			</div>
			<section>
				<ul>
					{
						posts.map((post) => {
							console.log("Post tags:", post.tags);
							return (
								<li
									class="blog-item"
									data-tags={post.tags.join(", ")}
								>
									<a href={`/blog/${post.slug || ""}/`}>
										<img
											src={post.featuredImage}
											width="720"
											height="360"
											onerror="console.log('Image failed to load:', this.src)"
										/>
										<h4 class="title">{post.title}</h4>
										{post.publishedDate ? (
											<FormattedDate
												date={post.publishedDate}
											/>
										) : (
											<p>No date available</p>
										)}

										{/* Render tags */}
										{post.tags.length > 0 && (
											<div class="tags">
												{post.tags.map((tag) => (
													<span class="tag">
														{tag}
													</span>
												))}
											</div>
										)}
									</a>
								</li>
							);
						})
					}
				</ul>
			</section>
		</main>

		<Footer />
	</body>
</html>

<script>
	// Function to filter blog items based on tags
	document.addEventListener("DOMContentLoaded", function () {
		const searchInput = document.getElementById(
			"searchInput",
		) as HTMLInputElement;
		const blogItems = document.querySelectorAll(".blog-item");

		if (searchInput) {
			searchInput.addEventListener("input", function () {
				const searchTerm = searchInput.value.toLowerCase().trim();

				blogItems.forEach((item) => {
					const blogItem = item as HTMLElement;
					const tags = blogItem.getAttribute("data-tags") || "";

					// Convert all tags to lowercase for case-insensitive search
					const tagList = tags.toLowerCase().split(", ");

					// Allow searching by multiple words
					const searchWords = searchTerm.split(" ");

					// Check if any search word matches any tag
					const matches = searchWords.some((word) =>
						tagList.some((tag) => tag.includes(word)),
					);

					// Show or hide blog item based on match
					blogItem.style.display = matches ? "block" : "none";
				});
			});
		}
	});
</script>
<style>
	main {
		width: 960px;
	}
	ul {
		display: flex;
		flex-wrap: wrap;
		gap: 2rem;
		list-style-type: none;
		margin: 0;
		padding: 0;
	}
	ul li {
		width: calc(50% - 1rem);
	}
	ul li * {
		text-decoration: none;
		transition: 0.2s ease;
	}
	ul li:first-child {
		width: 100%;
		margin-bottom: 1rem;
		text-align: center;
	}
	ul li:first-child img {
		width: 100%;
	}
	ul li:first-child .title {
		font-size: 2.369rem;
	}
	ul li img {
		margin-bottom: 0.5rem;
		border-radius: 12px;
	}
	ul li a {
		display: block;
		color: #ba5765;
	}
	.title {
		margin: 0;
		color: #ba5765;
		line-height: 1;
	}
	.date {
		margin: 0;
		color: #ba5765;
	}
	.search-bar {
		margin-bottom: 1rem;
		padding: 1rem;
		border-radius: 8px;
		color: #ba5765;
	}
	.search-bar input {
		width: 100%;
		padding: 0.5rem;
		border: 1px solid black;
		border-radius: 4px;
		color: #ba5765;
	}
	.tags {
		margin: 0.5rem 0;
		display: flex;
		flex-wrap: wrap;
		gap: 0.5rem;
		color: #ba5765;
	}
	.tag {
		background: rgb(var(--accent));
		padding: 0.25rem 0.5rem;
		border-radius: 4px;
		font-size: 0.875rem;
		color: #ba5765;
	}
	ul li a:hover h4,
	ul li a:hover .date {
		color: rgb(var(--accent));
	}
	ul a:hover img {
		box-shadow: var(--box-shadow);
	}
	@media (max-width: 720px) {
		ul {
			gap: 0.5em;
		}
		ul li {
			width: 100%;
			text-align: center;
		}
		ul li:first-child {
			margin-bottom: 0;
		}
		ul li:first-child .title {
			font-size: 1.563em;
		}
	}
</style>
