---
const theme =
    typeof document !== "undefined" ? localStorage.getItem("theme") : "light";
---

<!-- Theme Toggle Button -->
<div
    id="theme-toggle"
    class="theme-toggle p-2 rounded-full cursor-pointer transition-colors"
    role="button"
    aria-label="Toggle theme"
>
    <!-- Toggle Circle contains the icon -->
    <span class="toggle-circle w-6 h-6 bg-white rounded-full flex items-center justify-center transition-all">
        <span id="theme-icon">‚òÄÔ∏è</span>
    </span>
</div>

<script type="module">
    // ‚úÖ Ensure the correct icon position on page load
    window.addEventListener("DOMContentLoaded", () => {
        const savedTheme = localStorage.getItem("theme") || "light";
        document.documentElement.classList.toggle("dark", savedTheme === "dark");

        const themeToggle = document.getElementById("theme-toggle");
        const toggleCircle = document.querySelector(".toggle-circle");
        const themeIcon = document.getElementById("theme-icon");

        if (toggleCircle) {
            toggleCircle.style.transform = savedTheme === "dark" ? "translateX(20px)" : "translateX(0)";
        }

        if (themeIcon) {
            themeIcon.textContent = savedTheme === "dark" ? "üåô" : "‚òÄÔ∏è";
        }
    });

    // Add event listener for the theme toggle
    const themeToggle = document.getElementById("theme-toggle");
    if (themeToggle) {
        themeToggle.addEventListener("click", () => {
            const currentTheme = localStorage.getItem("theme") || "light";
            const newTheme = currentTheme === "dark" ? "light" : "dark";

            // Toggle the theme
            document.documentElement.classList.toggle("dark", newTheme === "dark");
            localStorage.setItem("theme", newTheme);

            // Update the position of the toggle switch
            const toggleCircle = document.querySelector(".toggle-circle");
            if (toggleCircle) {
                toggleCircle.style.transform = newTheme === "dark" ? "translateX(20px)" : "translateX(0)";
            }

            // Update the icon to reflect the current theme
            const themeIcon = document.getElementById("theme-icon");
            if (themeIcon) {
                themeIcon.textContent = newTheme === "dark" ? "üåô" : "‚òÄÔ∏è";
            }
        });
    }
</script>

<style>
    .theme-toggle {
        position: relative;
        display: inline-block;
        width: 50px;
        height: 30px;
        background-color: #ccc;
        border-radius: 30px;
        transition: background-color 0.3s ease;
    }

    /* Ensure the toggle circle moves */
    .toggle-circle {
        position: absolute;
        width: 24px;
        height: 24px;
        left: 2px;
        top: 2px;
        background-color: white;
        border-radius: 50%;
        transition: transform 0.3s ease;
        display: flex;
        align-items: center;
        justify-content: center;
    }

    /* Move the toggle circle to the right when dark mode is active */
    .theme-toggle.dark .toggle-circle {
        transform: translateX(20px);
    }

    /* Dark mode theme for the body */
    html.dark {
        background-color: #333;
        color: white;
    }

    /* Style for the moon and sun icons */
    #theme-icon {
        font-size: 14px;
        transition: transform 0.3s ease, opacity 0.3s ease;
    }

    /* Ensure the icon moves with the toggle */
    .theme-toggle.dark #theme-icon {
        transform: translateX(0);
        opacity: 0;
    }
    .theme-toggle:not(.dark) #theme-icon {
        opacity: 1;
    }
  


</style>
