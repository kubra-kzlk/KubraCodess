---
import type { HTMLAttributes } from "astro/types";
type Props = HTMLAttributes<"a"> & {
	dropdown?: { label: string; href: string }[];
};

const { href, class: className, dropdown, ...props } = Astro.props;
const pathname = Astro.url.pathname.replace(import.meta.env.BASE_URL, "");
const subpath = pathname.match(/[^\/]+/g);
const isActive = href === pathname || href === "/" + (subpath?.[0] || "");
---

<div class="nav-item-container">
	<a
		href={dropdown ? "#" : href}
		class:list={[className, { active: isActive }]}
		{...props}
		onclick={dropdown ? "return false;" : undefined}
	>
		<slot />
		{dropdown && <span class="arrow">â–¼</span>}
	</a>	</a>
	{
		dropdown && dropdown.length > 0 ? (
			<ul class="dropdown">
				{dropdown.map((item) => (
					<li>
						<a href={item.href} class="dropdown-link">
							{item.label}
						</a>
					</li>
				))}
			</ul>
		) : null
	}
</div>

<style>
	.nav-item-container {
		position: relative;
		display: inline-block;
	}

	.dropdown {
		display: none;
		position: absolute;
		background: white;
		border: 1px solid rgba(186, 87, 101, 0.1);
		border-radius: 8px;
		padding: 0.5rem 0;
		list-style: none;
		min-width: 180px;
		box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
		top: 100%;
		left: 50%;
		transform: translateX(-50%);
		z-index: 100;
		margin-top: 0.5rem;
	}

	.dropdown::before {
		content: "";
		position: absolute;
		top: -6px;
		left: 50%;
		transform: translateX(-50%) rotate(45deg);
		width: 12px;
		height: 12px;
		background: white;
		border-left: 1px solid rgba(186, 87, 101, 0.1);
		border-top: 1px solid rgba(186, 87, 101, 0.1);
	}

	.nav-item-container:hover .dropdown {
		display: block;
		animation: fadeIn 0.2s ease;
	}

	@keyframes fadeIn {
		from {
			opacity: 0;
			transform: translateX(-50%) translateY(-10px);
		}
		to {
			opacity: 1;
			transform: translateX(-50%) translateY(0);
		}
	}

	.dropdown li {
		margin: 0;
		padding: 0;
	}

	.dropdown-link {
		display: block;
		padding: 0.5rem 1rem;
		color: #ba5765;
		text-decoration: none;
		transition: all 0.2s ease;
		white-space: nowrap;
	}

	.dropdown-link:hover {
		background: rgba(186, 87, 101, 0.1);
		color: #d4717f;
	}

	.arrow {
		display: inline-block;
		margin-left: 4px;
		font-size: 10px;
		transition: transform 0.2s ease;
	}

	.nav-item-container:hover .arrow {
		transform: rotate(180deg);
	}

	:global(.dark) .dropdown {
		background: #1a1a1a;
		border-color: #333;
	}

	:global(.dark) .dropdown::before {
		background: #1a1a1a;
		border-color: #333;
	}

	:global(.dark) .dropdown-link {
		color: #d4717f;
	}

	:global(.dark) .dropdown-link:hover {
		background: rgba(186, 87, 101, 0.2);
	}
</style>
